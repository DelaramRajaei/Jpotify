/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author Darya
 */
public class MusicBarP extends JPanel implements ActionListener {

    /**
     * Creates new form MusicBarP
     */


    private JPanel buttonsPanel;
    private JPanel currentMusic;
    private JLabel labelDuration;
    private JLabel labelTimeCounter;
    private JLabel musicArtistAndAlbum;
    private JLabel musicImage;
    private JLabel musicName;
    private JSlider musicSlider;
    private JButton next;
    private JButton play;
    private JPanel powerVoic;
    private JLabel powerVoicLable;
    private JSlider powerVoicSlider;
    private JButton previous;
    private JButton rePlay;
    private JButton shuffle;
    private JPanel sliderPanel;
    private JPanel vasatPanel;


    private boolean isPlaying = false;
    private boolean isReplay = false;
    private boolean isShuffle = false;

    private ImageIcon playIcon = new ImageIcon(this.getClass().getResource("images/play.png"));
    private ImageIcon pauseIcon = new ImageIcon(this.getClass().getResource("images/paus.png"));
    private ImageIcon nextIcon = new ImageIcon(this.getClass().getResource("images/next.png"));
    private ImageIcon previousIcon = new ImageIcon(this.getClass().getResource("images/previous.png"));
    private ImageIcon shuffleoff = new ImageIcon(this.getClass().getResource("images/shuffleOff.png"));
    private ImageIcon shuffleOn = new ImageIcon(this.getClass().getResource("images/shuffleOn.png"));
    private ImageIcon replayOn = new ImageIcon(this.getClass().getResource("images/replayOn.png"));
    private ImageIcon replayOff = new ImageIcon(this.getClass().getResource("images/replayOff.png"));
    private ImageIcon cover = new ImageIcon(this.getClass().getResource("images/cover.png"));






    public MusicBarP() {
        initComponents();



        musicSlider.setValue(0);

        play.setIcon(playIcon);
        play.setFont(new Font("Sans", Font.BOLD, 14));
        play.setBackground(new Color(51,51,51));
        play.setIcon(playIcon);
        play.setBorder(null);


        rePlay.setFont(new Font("sans",Font.BOLD,14));
        rePlay.setBackground(new Color(51,51,51));
        rePlay.setIcon(replayOff);
        rePlay.setBorder(null);



        previous.setFont(new Font("sans",Font.BOLD,14));
        previous.setBackground(new Color(51,51,51));
        previous.setIcon(previousIcon);
        previous.setBorder(null);


        next.setFont(new Font("sans",Font.BOLD,14));
        next.setBackground(new Color(51,51,51));
        next.setIcon(nextIcon);
        next.setBorder(null);


        shuffle.setFont(new Font("sans",Font.BOLD,14));
        shuffle.setBackground(new Color(51,51,51));
        shuffle.setIcon(shuffleoff);

        labelTimeCounter.setFont(new Font("Sans", Font.BOLD, 12));
        labelTimeCounter.setForeground(new Color(234, 251, 255));

        labelDuration.setFont(new Font("Sans", Font.BOLD, 12));
        labelDuration.setForeground(new Color(234, 251, 255));

        this.setBackground(new Color(51,51,51));
        powerVoic.setBackground(new Color(51,51,51));
        musicSlider.setBackground(new Color(51,51,51));

        buttonsPanel.setBackground(new Color(51,51,51));
        currentMusic.setBackground(new Color(51,51,51));
        sliderPanel.setBackground(new Color(51,51,51));
        vasatPanel.setBackground(new Color(51,51,51));

        play.addActionListener(this);
        previous.addActionListener(this);
        rePlay.addActionListener(this);
        next.addActionListener(this);
        shuffle.addActionListener(this);

        this.setVisible(true);





musicImage.setIcon(cover);
musicName.setText("Faint");
musicArtistAndAlbum.setText("Epica,al");
musicName.setForeground(new Color(234, 251, 255));
musicArtistAndAlbum.setForeground(new Color(234, 251, 255));




previous.setIcon(previousIcon);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        currentMusic = new javax.swing.JPanel();
        musicImage = new javax.swing.JLabel();
        musicArtistAndAlbum = new javax.swing.JLabel();
        musicName = new javax.swing.JLabel();
        vasatPanel = new javax.swing.JPanel();
        sliderPanel = new javax.swing.JPanel();
        labelDuration = new javax.swing.JLabel();
        musicSlider = new javax.swing.JSlider();
        labelTimeCounter = new javax.swing.JLabel();
        buttonsPanel = new javax.swing.JPanel();
        shuffle = new javax.swing.JButton();
        previous = new javax.swing.JButton();
        play = new javax.swing.JButton();
        next = new javax.swing.JButton();
        rePlay = new javax.swing.JButton();
        powerVoic = new javax.swing.JPanel();
        powerVoicLable = new javax.swing.JLabel();
        powerVoicSlider = new javax.swing.JSlider();

        setMinimumSize(new java.awt.Dimension(719, 159));
        setLayout(new java.awt.GridBagLayout());

        currentMusic.setLayout(new java.awt.GridBagLayout());

        musicImage.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 79;
        gridBagConstraints.ipady = 94;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 3, 0, 0);
        currentMusic.add(musicImage, gridBagConstraints);

        musicArtistAndAlbum.setText("jLabel2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 10, 0, 0);
        currentMusic.add(musicArtistAndAlbum, gridBagConstraints);

        musicName.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(46, 10, 0, 0);
        currentMusic.add(musicName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 0, 0, 0);
        add(currentMusic, gridBagConstraints);

        sliderPanel.setLayout(new java.awt.GridBagLayout());

        labelDuration.setText("jLabel2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 0, 0, 0);
        sliderPanel.add(labelDuration, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 164;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 5, 16, 0);
        sliderPanel.add(musicSlider, gridBagConstraints);

        labelTimeCounter.setText("jLabel3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 23;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 12, 0, 2);
        sliderPanel.add(labelTimeCounter, gridBagConstraints);

        buttonsPanel.setLayout(new java.awt.GridLayout());

        shuffle.setText("jButton1");
        buttonsPanel.add(shuffle);

        previous.setText("jButton2");
        buttonsPanel.add(previous);

        play.setText("jButton3");
        buttonsPanel.add(play);

        next.setText("jButton4");
        buttonsPanel.add(next);

        rePlay.setText("jButton1");
        buttonsPanel.add(rePlay);

        javax.swing.GroupLayout vasatPanelLayout = new javax.swing.GroupLayout(vasatPanel);
        vasatPanel.setLayout(vasatPanelLayout);
        vasatPanelLayout.setHorizontalGroup(
            vasatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sliderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(buttonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        vasatPanelLayout.setVerticalGroup(
            vasatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vasatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(sliderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 31;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 7, 0, 0);
        add(vasatPanel, gridBagConstraints);

        powerVoicLable.setText("jLabel4");

        javax.swing.GroupLayout powerVoicLayout = new javax.swing.GroupLayout(powerVoic);
        powerVoic.setLayout(powerVoicLayout);
        powerVoicLayout.setHorizontalGroup(
            powerVoicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, powerVoicLayout.createSequentialGroup()
                .addComponent(powerVoicLable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(powerVoicSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        powerVoicLayout.setVerticalGroup(
            powerVoicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, powerVoicLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(powerVoicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(powerVoicSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(powerVoicLable))
                .addGap(20, 20, 20))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 75;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 7, 0, 12);
        add(powerVoic, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables


    @Override
    public void actionPerformed(ActionEvent event) {
        Object source = event.getSource();

        if(event.getSource()==play){
            if (!isPlaying) {
                play.setIcon(pauseIcon);
                isPlaying=true;
            } else {
                play.setIcon(playIcon);
                isPlaying=false;
            }
        }

        else  if(event.getSource()==rePlay){
            if (!isReplay) {
                rePlay.setIcon(replayOn);
                isReplay=true;

            } else {
                rePlay.setIcon(replayOff);
                isReplay=false;

            }
        }else if(event.getSource()==next){
            //t.stop();
        }else if(event.getSource()==previous){
            //t.stop();
        }else if(event.getSource()==shuffle){
            if (!isShuffle) {
                shuffle.setIcon(shuffleOn);
                isShuffle=true;

            } else {
                shuffle.setIcon(shuffleoff);
                isShuffle=false;

            }
    }
    }
    // End of variables declaration//GEN-END:variables
}
